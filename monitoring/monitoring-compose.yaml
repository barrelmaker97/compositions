---
version: "3.7"
services:
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SERVER_DOMAIN: "grafana.barrelmaker.dev"
      GF_SERVER_ROOT_URL: "https://grafana.barrelmaker.dev"
      GF_SERVER_ENFORCE_DOMAIN: "true"
      GF_SERVER_ENABLE_GZIP: "true"
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SECURITY_COOKIE_SAMESITE: "strict"
      GF_SECURITY_X_CONTENT_TYPE_OPTIONS: "false"
      GF_RENDERING_SERVER_URL: "http://renderer:8081/render"
      GF_RENDERING_CALLBACK_URL: "http://grafana:3000/"
      GF_LOG_FILTERS: "rendering:debug"
    volumes:
      - type: bind
        source: /volume1/docker/grafana
        target: /var/lib/grafana
    restart: unless-stopped
  renderer:
    container_name: grafana-image-renderer
    image: grafana/grafana-image-renderer:latest
    environment:
      LOG_LEVEL: "debug"
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: /volume1/docker/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: bind
        source: /volume1/docker/prometheus/prometheus
        target: /prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=26w"
    restart: unless-stopped
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    command:
      - "--path.rootfs=/host"
    volumes:
      - type: bind
        source: /
        target: /host
        read_only: true
    restart: unless-stopped
  nut-exporter:
    container_name: nut-exporter
    image: ghcr.io/barrelmaker97/nut-exporter:latest
    environment:
      UPS_HOST: "pollux.lan"
    restart: unless-stopped
  pihole-exporter:
    container_name: pihole-exporter
    image: ekofr/pihole-exporter:latest
    environment:
      PIHOLE_HOSTNAME: 192.168.1.132
      PIHOLE_PASSWORD: ${PIHOLE_PASSWORD:?PIHOLE_PASSWORD variable was not set}
      INTERVAL: 15s
      PORT: 9167
    restart: unless-stopped

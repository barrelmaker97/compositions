---
services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      TZ: America/Chicago
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 3600
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana:12.1.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SERVER_DOMAIN: "grafana.soteria.lan"
      GF_SERVER_ROOT_URL: "http://grafana.soteria.lan"
      GF_SECURITY_X_CONTENT_TYPE_OPTIONS: "false"
    volumes:
      - "/volume1/docker/grafana:/var/lib/grafana"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v3.2.1
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "/volume1/docker/compositions/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "/volume1/docker/prometheus/prometheus:/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=90d"

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    volumes:
      - "/:/host:ro"
    command:
      - "--path.rootfs=/host"
